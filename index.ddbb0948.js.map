{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,4EAQMC,EAAOC,SAASC,cAAc,uBAC9BC,EAAUF,SAASC,cAAc,iBAKjCE,EAAkB,SAAAC,IACtB,EAAAC,EAAAC,eACGC,MAAK,SAAAC,GACJJ,EAAWK,KAAI,SAAAC,GACb,IACMC,EADcD,EAAME,aACIC,MAAM,KAE9BC,EAAaJ,EAAMK,UACnBC,EAAiB,GACvBF,EAAWL,KAAI,SAAAQ,GACb,IAAMC,EAAWV,EAAWW,OAAOC,MAAK,SAAAC,G,OAASA,EAAMJ,KAAOA,C,IAC9DD,EAAeM,KAAKJ,E,IAEtB,IAAMK,EAAY,GAClBP,EAAeP,KAAI,SAAAY,GACjBE,EAAUD,KAAKD,EAAMG,K,IAEvB,IAAML,EAASI,EAAUE,KAAK,MAExBC,EAAO1B,SAAS2B,cAAc,OACpCD,EAAKE,UAAY,8CAA8HC,OAAhFnB,EAAMO,GAAG,yEAAiJY,OAA1EnB,EAAMoB,YAAY,0DAA0GD,OAAlDnB,EAAMqB,MAAM,wCAAkDF,OAAZV,EAAO,OAAkBU,OAAblB,EAAU,GAAG,cAEpST,EAAQ8B,YAAYN,E,OAGvBO,OAAM,SAAAC,GACLC,QAAQC,MAAMF,E,KAqBdG,G,EAAcC,EAAAzC,EAAA,CAAAyC,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAIVC,EAGRC,E,yEANNF,EAAMG,iBAGJF,EACE5C,EADF+C,SAAYH,YAGRC,EAAaD,EAAYI,MAC/BZ,QAAQa,IAAIJ,G,UAEN,EAAAvC,EAAA4C,YAAWL,EA7DF,GA8DZrC,MAAK,SAAA2C,GACJhD,EAAQ0B,UAAa,GACrB,IAAMuB,EAAYD,EAAKE,QACvBjB,QAAQa,IAAIG,GACZhD,EAAgBgD,E,IAGjBlB,OAAM,SAAAG,GACLD,QAAQC,MAAMA,E,wDAnBMM,G,iCAwBxBW,OAAKC,OAxCmB,SAAAZ,GACxBxC,EAAQ0B,UAAa,IAErB,EAAAvB,EAAAkD,qBACGhD,MAAK,SAAA2C,GAEJ,IAAMC,EAAYD,EAAKE,QAEvBjD,EAAgBgD,E,IAEjBlB,OAAM,SAAAG,GACLD,QAAQC,MAAMA,E,KAgCjBrC,EAAEyD,iBAAiB,SAAUnB,GAqBhCrC,SAASwD,iBAAiB,SAlBP,SAAAd,GACjB,IAAMe,EAASf,EAAMe,OAAOC,QAAQ,uBACpC,GAAKhB,EAAMe,OAAOC,QAAQ,uBAA1B,CAIA,IAAMC,EAAOF,EAAOG,aAAa,WACjCzB,QAAQa,IAAIW,IAEZ,EAAAtD,EAAAwD,cAAaF,GACVpD,MAAK,SAAA2C,GACJf,QAAQa,IAAIE,IACZ,EAAAY,EAAAC,aAAYb,E,IAEbjB,OAAM,SAAAG,GACLD,QAAQC,MAAMA,E,GAZhB,C","sources":["src/js/home-library.js"],"sourcesContent":["'use strict';\nimport { fetchVideo } from './fetch-video';\nimport { fetchVideoPopular } from './fetch-video';\nimport { fetchDetails } from './fetch-video';\nimport { fetchGenres } from './fetch-video';\nimport { renderModal } from './more-info-modal';\n\n// const form = document.querySelector('#search-form');\nconst form = document.querySelector('#header-search-form');\nconst gallery = document.querySelector('.home-gallery');\nlet pageNumber = 1;\nlet videoId = 0;\n\n// funkcja do wyświetlania wyszukanych filmów\nconst renderVideoCard = videoArray => {\n  fetchGenres()\n    .then(genresList => {\n      videoArray.map(video => {\n        const releaseDate = video.release_date;\n        const movieYear = releaseDate.split('-');\n\n        const arrGenreId = video.genre_ids;\n        const arrVideoGenres = [];\n        arrGenreId.map(id => {\n          const genreObj = genresList.genres.find(genre => genre.id === id);\n          arrVideoGenres.push(genreObj);\n        });\n        const arrGenres = [];\n        arrVideoGenres.map(genre => {\n          arrGenres.push(genre.name);\n        });\n        const genres = arrGenres.join(', ');\n\n        const card = document.createElement('div');\n        card.innerHTML = `<div class = \"home-gallery__card\" movieid=\"${video.id}\"><img class=\"home-gallery__img\" src=\"https://image.tmdb.org/t/p/w300${video.poster_path}\" alt =\"video poster\"><h3 class= \"home-gallery-title\">${video.title}</h3><p class = \"home-gallery-link\">${genres} | ${movieYear[0]}</p></div>`;\n\n        gallery.appendChild(card);\n      });\n    })\n    .catch(err => {\n      console.error(err);\n    });\n};\n\n// obsługa zapytania o najpopularniejsze filmy\nconst loadPopularMovies = event => {\n  gallery.innerHTML = ``;\n\n  fetchVideoPopular()\n    .then(data => {\n      // console.log(data);\n      const dataArray = data.results;\n      // console.log(dataArray);\n      renderVideoCard(dataArray);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\n// obsługa zapytania o film dopasowany do wartości wpisanej do input\nconst searchVideo = async event => {\n  event.preventDefault();\n\n  const {\n    elements: { searchQuery },\n  } = form;\n\n  const formSearch = searchQuery.value;\n  console.log(formSearch);\n\n  await fetchVideo(formSearch, pageNumber)\n    .then(data => {\n      gallery.innerHTML = ``;\n      const dataArray = data.results;\n      console.log(dataArray);\n      renderVideoCard(dataArray);\n      // boject = data;\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\n// tworzenie siatki popularnych filmów przy załadowaniu strony\nwindow.onload = loadPopularMovies;\n\n// tworzenie siatki filmów odpowiadających wartości input\nform.addEventListener('submit', searchVideo);\n\n// otwieranie modala ze szczegółami o filmie\nconst getDetails = event => {\n  const target = event.target.closest('.home-gallery__card');\n  if (!event.target.closest('.home-gallery__card')) {\n    return;\n  }\n\n  const test = target.getAttribute('movieid');\n  console.log(test);\n\n  fetchDetails(test)\n    .then(data => {\n      console.log(data);\n      renderModal(data);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\ndocument.addEventListener('click', getDetails);\n"],"names":["$bpxeT","parcelRequire","$19fb996809789565$var$form","document","querySelector","$19fb996809789565$var$gallery","$19fb996809789565$var$renderVideoCard","videoArray","$je9aX","fetchGenres","then","genresList","map","video","movieYear","release_date","split","arrGenreId","genre_ids","arrVideoGenres","id","genreObj","genres","find","genre","push","arrGenres","name","join","card","createElement","innerHTML","concat","poster_path","title","appendChild","catch","err","console","error","$19fb996809789565$var$searchVideo","$parcel$interopDefault","$2TvXO","mark","_callee","event","searchQuery","formSearch","preventDefault","elements","value","log","fetchVideo","data","dataArray","results","window","onload","fetchVideoPopular","addEventListener","target","closest","test","getAttribute","fetchDetails","$8qMKg","renderModal"],"version":3,"file":"index.ddbb0948.js.map"}