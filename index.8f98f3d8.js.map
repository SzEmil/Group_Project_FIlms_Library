{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,kDAQA,MAAMC,EAAOC,SAASC,cAAc,uBAC9BC,EAAUF,SAASC,cAAc,iBAKrC,MAAIE,EAAkBC,KACtB,EAAAP,EAAAQ,eACGC,MAAKC,IACJH,EAAWI,KAAIC,IACb,MACMC,EADcD,EAAME,aACIC,MAAM,KAE9BC,EAAaJ,EAAMK,UACnBC,EAAiB,GACvBF,EAAWL,KAAIQ,IACb,MAAMC,EAAWV,EAAWW,OAAOC,MAAKC,GAASA,EAAMJ,KAAOA,IAC9DD,EAAeM,KAAKJ,EAAS,IAE/B,MAAMK,EAAY,GAClBP,EAAeP,KAAIY,IACjBE,EAAUD,KAAKD,EAAMG,KAAK,IAE5B,MAAML,EAASI,EAAUE,KAAK,MAExBC,EAAOzB,SAAS0B,cAAc,OACpCD,EAAKE,UAAY,8CAA8ClB,EAAMO,0EAA0EP,EAAMmB,oEAAoEnB,EAAMoB,4CAA4CX,OAAYR,EAAU,eAEjSR,EAAQ4B,YAAYL,EAAK,GACzB,IAEHM,OAAMC,IACLC,QAAQC,MAAMF,EAAI,GAClB,EA4CJG,OAAKC,OAxCmBC,IACxBnC,EAAQyB,UAAY,IAEpB,EAAA9B,EAAAyC,qBACGhC,MAAKiC,IAEJ,MAAMC,EAAYD,EAAKE,QAEvBtC,EAAgBqC,EAAU,IAE3BT,OAAMG,IACLD,QAAQC,MAAMA,EAAM,GACpB,EA+BHnC,EAAE2C,iBAAiB,UA3BFC,MAAMN,IACxBA,EAAMO,iBAEN,MACEC,UAAUC,YAAEA,IACV/C,EAEEgD,EAAaD,EAAYE,MAC/Bf,QAAQgB,IAAIF,SAEN,EAAAlD,EAAAqD,YAAWH,EA7DF,GA8DZzC,MAAKiC,IACJrC,EAAQyB,UAAY,GACpB,MAAMa,EAAYD,EAAKE,QACvBR,QAAQgB,IAAIT,GACZrC,EAAgBqC,EAAU,IAG3BT,OAAMG,IACLD,QAAQC,MAAMA,EAAM,GACpB,IA4BNlC,SAAS0C,iBAAiB,SAlBPL,IACjB,MAAMc,EAASd,EAAMc,OAAOC,QAAQ,uBACpC,IAAKf,EAAMc,OAAOC,QAAQ,uBACxB,OAGF,MAAMC,EAAOF,EAAOG,aAAa,WACjCrB,QAAQgB,IAAII,IAEZ,EAAAxD,EAAA0D,cAAaF,GACV/C,MAAKiC,IACJN,QAAQgB,IAAIV,IACZ,EAAAiB,EAAAC,aAAYlB,EAAK,IAElBR,OAAMG,IACLD,QAAQC,MAAMA,EAAM,GACpB","sources":["src/js/home-library.js"],"sourcesContent":["'use strict';\nimport { fetchVideo } from './fetch-video';\nimport { fetchVideoPopular } from './fetch-video';\nimport { fetchDetails } from './fetch-video';\nimport { fetchGenres } from './fetch-video';\nimport { renderModal } from './more-info-modal';\n\n// const form = document.querySelector('#search-form');\nconst form = document.querySelector('#header-search-form');\nconst gallery = document.querySelector('.home-gallery');\nlet pageNumber = 1;\nlet videoId = 0;\n\n// funkcja do wyświetlania wyszukanych filmów\nconst renderVideoCard = videoArray => {\n  fetchGenres()\n    .then(genresList => {\n      videoArray.map(video => {\n        const releaseDate = video.release_date;\n        const movieYear = releaseDate.split('-');\n\n        const arrGenreId = video.genre_ids;\n        const arrVideoGenres = [];\n        arrGenreId.map(id => {\n          const genreObj = genresList.genres.find(genre => genre.id === id);\n          arrVideoGenres.push(genreObj);\n        });\n        const arrGenres = [];\n        arrVideoGenres.map(genre => {\n          arrGenres.push(genre.name);\n        });\n        const genres = arrGenres.join(', ');\n\n        const card = document.createElement('div');\n        card.innerHTML = `<div class = \"home-gallery__card\" movieid=\"${video.id}\"><img class=\"home-gallery__img\" src=\"https://image.tmdb.org/t/p/w300${video.poster_path}\" alt =\"video poster\"><h3 class= \"home-gallery-title\">${video.title}</h3><p class = \"home-gallery-link\">${genres} | ${movieYear[0]}</p></div>`;\n\n        gallery.appendChild(card);\n      });\n    })\n    .catch(err => {\n      console.error(err);\n    });\n};\n\n// obsługa zapytania o najpopularniejsze filmy\nconst loadPopularMovies = event => {\n  gallery.innerHTML = ``;\n\n  fetchVideoPopular()\n    .then(data => {\n      // console.log(data);\n      const dataArray = data.results;\n      // console.log(dataArray);\n      renderVideoCard(dataArray);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\n// obsługa zapytania o film dopasowany do wartości wpisanej do input\nconst searchVideo = async event => {\n  event.preventDefault();\n\n  const {\n    elements: { searchQuery },\n  } = form;\n\n  const formSearch = searchQuery.value;\n  console.log(formSearch);\n\n  await fetchVideo(formSearch, pageNumber)\n    .then(data => {\n      gallery.innerHTML = ``;\n      const dataArray = data.results;\n      console.log(dataArray);\n      renderVideoCard(dataArray);\n      // boject = data;\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\n// tworzenie siatki popularnych filmów przy załadowaniu strony\nwindow.onload = loadPopularMovies;\n\n// tworzenie siatki filmów odpowiadających wartości input\nform.addEventListener('submit', searchVideo);\n\n// otwieranie modala ze szczegółami o filmie\nconst getDetails = event => {\n  const target = event.target.closest('.home-gallery__card');\n  if (!event.target.closest('.home-gallery__card')) {\n    return;\n  }\n\n  const test = target.getAttribute('movieid');\n  console.log(test);\n\n  fetchDetails(test)\n    .then(data => {\n      console.log(data);\n      renderModal(data);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\ndocument.addEventListener('click', getDetails);\n"],"names":["$3ZRvh","parcelRequire","$caed632eb6ae278a$var$form","document","querySelector","$caed632eb6ae278a$var$gallery","$caed632eb6ae278a$var$renderVideoCard","videoArray","fetchGenres","then","genresList","map","video","movieYear","release_date","split","arrGenreId","genre_ids","arrVideoGenres","id","genreObj","genres","find","genre","push","arrGenres","name","join","card","createElement","innerHTML","poster_path","title","appendChild","catch","err","console","error","window","onload","event","fetchVideoPopular","data","dataArray","results","addEventListener","async","preventDefault","elements","searchQuery","formSearch","value","log","fetchVideo","target","closest","test","getAttribute","fetchDetails","$3wwqR","renderModal"],"version":3,"file":"index.8f98f3d8.js.map"}